{
  "version": 3,
  "sources": ["../../../app/routes/rider.deliveries.tsx", "../../../app/components/rider/DeliveryHistory.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/rider.deliveries.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/rider.deliveries.tsx\");\n  import.meta.hot.lastModified = \"1735067405681\";\n}\n// REMIX HMR END\n\nimport { json } from \"@remix-run/node\";\nimport { useLoaderData } from \"@remix-run/react\";\nimport { DeliveryHistory } from \"~/components/rider/DeliveryHistory\";\nexport async function loader() {\n  return json({\n    deliveries: [{\n      id: '1',\n      orderId: '1234',\n      customerName: 'John Doe',\n      pickupLocation: '123 Store St',\n      dropLocation: '456 Home Ave',\n      amount: 299.99,\n      status: 'completed',\n      completedAt: new Date().toISOString()\n    }]\n  });\n}\nexport default function RiderDeliveries() {\n  _s();\n  const {\n    deliveries\n  } = useLoaderData();\n  return <DeliveryHistory deliveries={deliveries} />;\n}\n_s(RiderDeliveries, \"17BifQyK0pwyS4XRitgzsZimmnI=\", false, function () {\n  return [useLoaderData];\n});\n_c = RiderDeliveries;\nvar _c;\n$RefreshReg$(_c, \"RiderDeliveries\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/rider/DeliveryHistory.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/rider/DeliveryHistory.tsx\");\n  import.meta.hot.lastModified = \"1735067405681\";\n}\n// REMIX HMR END\n\nexport function DeliveryHistory({\n  deliveries\n}) {\n  return <div className=\"p-6\">\n      <h1 className=\"text-2xl font-bold mb-6\">Delivery History</h1>\n\n      <div className=\"bg-white rounded-lg shadow-sm overflow-hidden\">\n        <div className=\"overflow-x-auto\">\n          <table className=\"w-full\">\n            <thead className=\"bg-gray-50\">\n              <tr>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">\n                  Order ID\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">\n                  Customer\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">\n                  Locations\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">\n                  Amount\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">\n                  Status\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">\n                  Completed\n                </th>\n              </tr>\n            </thead>\n            <tbody className=\"divide-y divide-gray-200\">\n              {deliveries.map(delivery => <tr key={delivery.id}>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\n                    #{delivery.orderId}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                    {delivery.customerName}\n                  </td>\n                  <td className=\"px-6 py-4 text-sm text-gray-500\">\n                    <div className=\"flex flex-col\">\n                      <span>From: {delivery.pickupLocation}</span>\n                      <span>To: {delivery.dropLocation}</span>\n                    </div>\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                    \u20B9{delivery.amount.toFixed(2)}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    <DeliveryStatus status={delivery.status} />\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                    {new Date(delivery.completedAt).toLocaleString()}\n                  </td>\n                </tr>)}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>;\n}\n_c = DeliveryHistory;\nfunction DeliveryStatus({\n  status\n}) {\n  const getStatusColor = status => {\n    switch (status.toLowerCase()) {\n      case 'completed':\n        return 'bg-green-100 text-green-800';\n      case 'cancelled':\n        return 'bg-red-100 text-red-800';\n      default:\n        return 'bg-gray-100 text-gray-800';\n    }\n  };\n  return <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${getStatusColor(status)}`}>\n      {status}\n    </span>;\n}\n_c2 = DeliveryStatus;\nvar _c, _c2;\n$RefreshReg$(_c, \"DeliveryHistory\");\n$RefreshReg$(_c2, \"DeliveryStatus\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["status", "import_jsx_dev_runtime", "_c"]
}
