{
  "version": 3,
  "sources": ["../../../app/routes/admin.orders.tsx", "../../../app/components/admin/AdminOrderList.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/admin.orders.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/admin.orders.tsx\");\n  import.meta.hot.lastModified = \"1735067405681\";\n}\n// REMIX HMR END\n\nimport { json } from \"@remix-run/node\";\nimport { useLoaderData } from \"@remix-run/react\";\nimport { AdminOrderList } from \"~/components/admin/AdminOrderList\";\nexport async function loader() {\n  return json({\n    orders: [{\n      id: '1',\n      customerName: 'John Doe',\n      status: 'pending',\n      total: 299.99,\n      createdAt: new Date().toISOString(),\n      items: [{\n        name: 'Organic Bananas',\n        quantity: 2,\n        price: 2.99\n      }, {\n        name: 'Farm Fresh Eggs',\n        quantity: 1,\n        price: 4.99\n      }]\n    }]\n  });\n}\nexport default function AdminOrders() {\n  _s();\n  const {\n    orders\n  } = useLoaderData();\n  return <AdminOrderList orders={orders} />;\n}\n_s(AdminOrders, \"REZ/uewjGaXhSxuZZAJ5w5to6lI=\", false, function () {\n  return [useLoaderData];\n});\n_c = AdminOrders;\nvar _c;\n$RefreshReg$(_c, \"AdminOrders\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/admin/AdminOrderList.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/admin/AdminOrderList.tsx\");\n  import.meta.hot.lastModified = \"1735067405681\";\n}\n// REMIX HMR END\n\nexport function AdminOrderList({\n  orders\n}) {\n  return <div className=\"p-6\">\n      <div className=\"flex justify-between items-center mb-6\">\n        <h1 className=\"text-2xl font-bold\">Orders</h1>\n        <div className=\"flex gap-4\">\n          <select className=\"border rounded-lg px-4 py-2\">\n            <option value=\"all\">All Orders</option>\n            <option value=\"pending\">Pending</option>\n            <option value=\"in_progress\">In Progress</option>\n            <option value=\"delivered\">Delivered</option>\n          </select>\n        </div>\n      </div>\n\n      <div className=\"bg-white rounded-lg shadow-sm\">\n        <div className=\"overflow-x-auto\">\n          <table className=\"w-full\">\n            <thead className=\"bg-gray-50\">\n              <tr>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Order ID\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Customer\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Status\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Total\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Date\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Actions\n                </th>\n              </tr>\n            </thead>\n            <tbody className=\"divide-y divide-gray-200\">\n              {orders.map(order => <tr key={order.id}>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\n                    #{order.id}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                    {order.customerName}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    <OrderStatus status={order.status} />\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                    \u20B9{order.total.toFixed(2)}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                    {new Date(order.createdAt).toLocaleDateString()}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                    <button className=\"text-primary-600 hover:text-primary-900\">\n                      View Details\n                    </button>\n                  </td>\n                </tr>)}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>;\n}\n_c = AdminOrderList;\nfunction OrderStatus({\n  status\n}) {\n  const getStatusColor = status => {\n    switch (status.toLowerCase()) {\n      case 'pending':\n        return 'bg-yellow-100 text-yellow-800';\n      case 'in_progress':\n        return 'bg-blue-100 text-blue-800';\n      case 'delivered':\n        return 'bg-green-100 text-green-800';\n      default:\n        return 'bg-gray-100 text-gray-800';\n    }\n  };\n  return <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${getStatusColor(status)}`}>\n      {status}\n    </span>;\n}\n_c2 = OrderStatus;\nvar _c, _c2;\n$RefreshReg$(_c, \"AdminOrderList\");\n$RefreshReg$(_c2, \"OrderStatus\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAqBA,kBAAqB;;;ACIb;AAxBR,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,8CAAgD,EAAE;AAAA,EAC3F;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAON,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAyC;AACzC,cAAY,IAAI,eAAe;AACjC;AAGO,SAAS,eAAe;AAAA,EAC7B;AACF,GAAG;AACD,SAAO,mDAAC,SAAI,WAAU,OAClB;AAAA,uDAAC,SAAI,WAAU,0CACb;AAAA,yDAAC,QAAG,WAAU,sBAAqB,sBAAnC;AAAA;AAAA;AAAA;AAAA,aAAyC;AAAA,MACzC,mDAAC,SAAI,WAAU,cACb,6DAAC,YAAO,WAAU,+BAChB;AAAA,2DAAC,YAAO,OAAM,OAAM,0BAApB;AAAA;AAAA;AAAA;AAAA,eAA8B;AAAA,QAC9B,mDAAC,YAAO,OAAM,WAAU,uBAAxB;AAAA;AAAA;AAAA;AAAA,eAA+B;AAAA,QAC/B,mDAAC,YAAO,OAAM,eAAc,2BAA5B;AAAA;AAAA;AAAA;AAAA,eAAuC;AAAA,QACvC,mDAAC,YAAO,OAAM,aAAY,yBAA1B;AAAA;AAAA;AAAA;AAAA,eAAmC;AAAA,WAJrC;AAAA;AAAA;AAAA;AAAA,aAKA,KANF;AAAA;AAAA;AAAA;AAAA,aAOA;AAAA,SATF;AAAA;AAAA;AAAA;AAAA,WAUA;AAAA,IAEA,mDAAC,SAAI,WAAU,iCACb,6DAAC,SAAI,WAAU,mBACb,6DAAC,WAAM,WAAU,UACf;AAAA,yDAAC,WAAM,WAAU,cACf,6DAAC,QACC;AAAA,2DAAC,QAAG,WAAU,kFAAiF,wBAA/F;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,QACA,mDAAC,QAAG,WAAU,kFAAiF,wBAA/F;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,QACA,mDAAC,QAAG,WAAU,kFAAiF,sBAA/F;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,QACA,mDAAC,QAAG,WAAU,kFAAiF,qBAA/F;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,QACA,mDAAC,QAAG,WAAU,kFAAiF,oBAA/F;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,QACA,mDAAC,QAAG,WAAU,kFAAiF,uBAA/F;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,WAlBF;AAAA;AAAA;AAAA;AAAA,aAmBA,KApBF;AAAA;AAAA;AAAA;AAAA,aAqBA;AAAA,MACA,mDAAC,WAAM,WAAU,4BACd,iBAAO,IAAI,WAAS,mDAAC,QAClB;AAAA,2DAAC,QAAG,WAAU,iEAAgE;AAAA;AAAA,UAC1E,MAAM;AAAA,aADV;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,QACA,mDAAC,QAAG,WAAU,qDACX,gBAAM,gBADT;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,QACA,mDAAC,QAAG,WAAU,+BACZ,6DAAC,eAAY,QAAQ,MAAM,UAA3B;AAAA;AAAA;AAAA;AAAA,eAAmC,KADrC;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,QACA,mDAAC,QAAG,WAAU,qDAAoD;AAAA;AAAA,UAC9D,MAAM,MAAM,QAAQ,CAAC;AAAA,aADzB;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,QACA,mDAAC,QAAG,WAAU,qDACX,cAAI,KAAK,MAAM,SAAS,EAAE,mBAAmB,KADhD;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,QACA,mDAAC,QAAG,WAAU,qDACZ,6DAAC,YAAO,WAAU,2CAA0C,4BAA5D;AAAA;AAAA;AAAA;AAAA,eAEA,KAHF;AAAA;AAAA;AAAA;AAAA,eAIA;AAAA,WApB0B,MAAM,IAAf;AAAA;AAAA;AAAA;AAAA,aAqBnB,CAAK,KAtBT;AAAA;AAAA;AAAA;AAAA,aAuBA;AAAA,SA9CF;AAAA;AAAA;AAAA;AAAA,WA+CA,KAhDF;AAAA;AAAA;AAAA;AAAA,WAiDA,KAlDF;AAAA;AAAA;AAAA;AAAA,WAmDA;AAAA,OAhEG;AAAA;AAAA;AAAA;AAAA,SAiEL;AACJ;AACA,KAAK;AACL,SAAS,YAAY;AAAA,EACnB;AACF,GAAG;AACD,QAAM,iBAAiB,CAAAA,YAAU;AAC/B,YAAQA,QAAO,YAAY,GAAG;AAAA,MAC5B,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AACH,eAAO;AAAA,MACT;AACE,eAAO;AAAA,IACX;AAAA,EACF;AACA,SAAO,mDAAC,UAAK,WAAW,iEAAiE,eAAe,MAAM,KACzG,oBADE;AAAA;AAAA;AAAA;AAAA,SAEL;AACJ;AACA,MAAM;AACN,IAAI;AAAJ,IAAQ;AACR,aAAa,IAAI,gBAAgB;AACjC,aAAa,KAAK,aAAa;AAE/B,OAAO,eAAe;AACtB,OAAO,eAAe;;;ADnEb,IAAAC,0BAAA;AAhDT,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,kCAAoC,EAAE;AAAA,EAC/E;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAA6B;AAC7B,cAAY,IAAI,eAAe;AACjC;AA0Be,SAAR,cAA+B;AACpC,KAAG;AACH,QAAM;AAAA,IACJ;AAAA,EACF,IAAI,cAAc;AAClB,SAAO,oDAAC,kBAAe,UAAhB;AAAA;AAAA;AAAA;AAAA,SAAgC;AACzC;AACA,GAAG,aAAa,gCAAgC,OAAO,WAAY;AACjE,SAAO,CAAC,aAAa;AACvB,CAAC;AACDC,MAAK;AACL,IAAIA;AACJ,aAAaA,KAAI,aAAa;AAE9B,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": ["status", "import_jsx_dev_runtime", "_c"]
}
